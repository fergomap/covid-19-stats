{"version":3,"sources":["store/current-view/types.tsx","components/main/components/view-selector/model/selector-options.enum.tsx","components/main/components/view-selector/model/selector-option.imp.tsx","components/main/components/view-selector/config/view-selector.config.tsx","store/language/types.tsx","store/current-view/reducer.tsx","store/current-view/model/current-view.state.imp.tsx","store/loading/types.tsx","model/language-option.imp.tsx","config/language.config.tsx","services/language.service.tsx","store/language/reducer.tsx","store/language/model/language.state.imp.tsx","store/map/types.tsx","store/loading/reducer.tsx","store/loading/model/loading.state.imp.tsx","store/stats/types.tsx","store/map/reducer.tsx","store/map/model/map.state.imp.tsx","components/main/components/map/map.component.tsx","store/stats/reducer.tsx","store/stats/model/stats.state.imp.tsx","store/main.reducer.tsx","store/loading/actions.tsx","model/country.imp.tsx","config/app.config.tsx","model/country-info.imp.tsx","components/main/components/map/model/color-level.imp.tsx","components/main/components/map/model/country-coordinates.imp.tsx","components/main/components/map/config/map.config.tsx","services/country.service.tsx","store/stats/actions.tsx","store/language/actions.tsx","components/main/components/header/components/language-selector/language-selector.component.tsx","components/main/components/header/header.component.tsx","i18n/i18n.tsx","components/main/components/chart-info/config/chart-info.config.tsx","components/main/components/chart-info/chart-info.component.tsx","components/main/components/table-info/config/table-info.config.tsx","components/main/components/table-info/table-info.component.tsx","components/main/components/table-info/model/country-row.imp.tsx","store/current-view/actions.tsx","components/main/components/view-selector/view-selector.component.tsx","store/map/actions.tsx","components/main/components/map/services/map.service.tsx","components/main/components/home/home.component.tsx","components/main/components/country-info/country-info.component.tsx","components/main/components/data-info/data-info.component.tsx","components/main/main.component.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["CurrentViewActionTypesEnum","SelectorOptions","SelectorOptionImp","title","icon","this","LanguageActionTypesEnum","VIEW_SELECTOR_CONSTANTS","SELECTOR_OPTIONS","TABLE","CHART","MAP","initialState","selectorOption","currentViewReducer","state","action","type","SET_SELECTOR_OPTION","Object","assign","LoadingActionTypesEnum","LanguageOptionImp","value","label","dayNames","dayNamesShort","dayNamesMin","monthNamesShort","monthNames","dateFormat","calendarDateFormat","today","clear","weekHeader","firstDayOfWeek","LANGUAGE_CONSTANTS","LANGUAGES","getStartLanguage","userLanguage","localStorage","covid_19_current_language","navigator","language","currentLanguage","find","languageOption","includes","setLocale","moment","locales","addLocaleToMoment","locale","monthsShort","months","languageReducer","CHANGE_LANGUAGE","MapActionTypesEnum","loading","loadingCounter","loadingReducer","SHOW_LOADING","HIDE_LOADING","StatsActionTypesEnum","data","mapReducer","SET_MAP_DATA","map","geoJsonLayer","markerGroup","countries","statsReducer","SET_COUNTRIES","mainReducer","combineReducers","currentView","stats","SHOW_LOADING_ACTION","HIDE_LOADING_ACTION","CountryImp","country","info","APP_CONSTANTS","ROUTES","ROOT","HOME","COUNTRY","COUNTRY_INFO","ENDPOINTS","FULL_DATA","MAP_DATA","process","CountryInfoImp","date","newCases","newDeaths","totalCases","totalDeaths","ColorLevelImp","limit","color","CountryCoordinatesImp","name","latLong","MAP_CONSTANTS","COLORS","LEVEL_1","LEVEL_2","LEVEL_3","LEVEL_4","LEVEL_5","COUNTRIES_LAT_LONG","getCountryColor","feature","properties","admin","countryInfo","format","undefined","SET_COUNTRIES_ACTION","CHANGE_LANGUAGE_ACTION","LanguageSelectorComponent","dispatch","useDispatch","useSelector","className","options","onChange","e","languageCode","selectedLanguage","changeLanguageAction","itemTemplate","option","src","alt","HeaderComponent","to","id","i18n","es","en","CHART_INFO_CONSTANTS","NEW_CASES","NEW_DEATHS","TOTAL_CASES","TOTAL_DEATHS","ChartInfoComponent","intl","useIntl","useState","setData","useEffect","length","labels","datasets","formatMessage","fill","backgroundColor","borderColor","animation","responsive","TABLE_INFO_CONFIG","TableInfoComponent","showDate","showCountryName","countryRowData","first","setFirst","fromToRow","setFromToRow","paginator","rows","onPage","header","body","rowData","sortable","field","CountryRowImp","SET_SELECTOR_OPTION_ACTION","ViewSelectorComponent","index","key","onClick","setSelectorOptionAction","onOptionSelect","SET_MAP_DATA_ACTION","createMarkers","setMarkerInfo","on","console","log","forEach","countryCoordinates","getCountryCoordinates","L","marker","addTo","MapComponent","mapData","markerInfo","subtract","setDate","keys","setView","tileLayer","attribution","geoJSON","style","weight","layerGroup","toDate","removeLayer","maxDate","minDate","readOnlyInput","HomeComponent","search","setSearch","setCountryRowData","axios","get","then","res","catch","err","geoJson","setMapDataAction","finally","formatCountryRowData","countriesList","placeholder","target","filter","toLowerCase","CountryInfoComponent","countryName","useParams","c","reverse","DataInfoComponent","href","rel","MainComponent","split","shift","currentCountry","row","push","Number","countriesInfo","setCountriesAction","messages","position","path","component","App","store","createStore","composeWithDevTools","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.3246f3cd.chunk.js","sourcesContent":["/* istanbul ignore file */\nexport enum CurrentViewActionTypesEnum {\n    SET_SELECTOR_OPTION = 'current-view/set-selector-option'\n}\n","export enum SelectorOptions {\n\tTABLE = 'table',\n\tCHART = 'chart',\n\tMAP = 'map'\n}\n","import SelectorOption from './selector-option';\n\nexport default class SelectorOptionImp implements SelectorOption {\n\ttitle: string;\n\ticon: string;\n\n\tconstructor(title: string = '', icon: string = '') {\n\t\tthis.title = title;\n\t\tthis.icon = icon;\n\t}\n}\n","import SelectorOption from '../model/selector-option';\nimport SelectorOptionImp from '../model/selector-option.imp';\nimport {SelectorOptions} from '../model/selector-options.enum';\n\ninterface ViewSelectorConfig {\n\tSELECTOR_OPTIONS: SelectorOption[];\n}\n\nexport const VIEW_SELECTOR_CONSTANTS: ViewSelectorConfig = {\n\tSELECTOR_OPTIONS: [\n\t\tnew SelectorOptionImp(SelectorOptions.TABLE, 'pi pi-table'),\n\t\tnew SelectorOptionImp(SelectorOptions.CHART, 'pi pi-chart-line'),\n\t\tnew SelectorOptionImp(SelectorOptions.MAP, 'pi pi-map-marker')\n\t]\n};\n","/* istanbul ignore file */\nexport enum LanguageActionTypesEnum {\n    CHANGE_LANGUAGE = 'language/change'\n}\n","import MainAction from '../model/main.action';\nimport {CurrentViewActionTypesEnum} from './types';\nimport {SetSelectorOptionAction} from './actions';\nimport CurrentViewState from './model/current-view.state';\nimport CurrentViewStateImp from './model/current-view.state.imp';\n\nconst initialState: CurrentViewState = new CurrentViewStateImp();\n\nconst currentViewReducer = (state = initialState, action: MainAction) => {\n    switch (action.type) {\n        case CurrentViewActionTypesEnum.SET_SELECTOR_OPTION: {\n            return Object.assign({}, state, {\n                selectorOption: (action as SetSelectorOptionAction).selectorOption\n            });\n        }\n        default:\n            return state;\n    }\n};\n\nexport default currentViewReducer;\n","/* istanbul ignore file */\nimport CurrentViewState from './current-view.state';\nimport SelectorOption from 'components/main/components/view-selector/model/selector-option';\nimport {VIEW_SELECTOR_CONSTANTS} from 'components/main/components/view-selector/config/view-selector.config';\n\nexport default class CurrentViewStateImp implements CurrentViewState {\n    selectorOption: SelectorOption;\n\n    constructor(selectorOption: SelectorOption = VIEW_SELECTOR_CONSTANTS.SELECTOR_OPTIONS[0]) {\n        this.selectorOption = selectorOption;\n    }\n}\n","/* istanbul ignore file */\nexport enum LoadingActionTypesEnum {\n    SHOW_LOADING = 'loading/show',\n    HIDE_LOADING = 'loading/hide'\n}\n","import LanguageOption from './language-option';\n\nexport default class LanguageOptionImp implements LanguageOption {\n    value: string;\n    label: string;\n    dayNames: string[];\n    dayNamesShort: string[];\n    dayNamesMin: string[];\n    monthNamesShort: string[];\n    monthNames: string[];\n    dateFormat: string;\n    calendarDateFormat: string;\n    today: string;\n    clear: string;\n    weekHeader: string;\n    firstDayOfWeek: number;\n\n    constructor(value: string = '', label: string = '', dayNames: string[] = [], dayNamesShort: string[] = [], dayNamesMin: string[] = [],\n                monthNamesShort: string[] = [], monthNames: string[] = [], dateFormat: string = '', calendarDateFormat: string = '',\n                today: string = '', clear: string = '', weekHeader: string = '', firstDayOfWeek: number = 0) {\n        this.value = value;\n        this.label = label;\n        this.dayNames = dayNames;\n        this.dayNamesShort = dayNamesShort;\n        this.dayNamesMin = dayNamesMin;\n        this.monthNamesShort = monthNamesShort;\n        this.monthNames = monthNames;\n        this.dateFormat = dateFormat;\n        this.calendarDateFormat = calendarDateFormat;\n        this.today = today;\n        this.clear = clear;\n        this.weekHeader = weekHeader;\n        this.firstDayOfWeek = firstDayOfWeek;\n    }\n}\n","import LanguageOption from 'model/language-option';\nimport LanguageOptionImp from 'model/language-option.imp';\n\ninterface LanguageConfig {\n    LANGUAGES: LanguageOption[]\n}\n\nexport const LANGUAGE_CONSTANTS: LanguageConfig = {\n    LANGUAGES: [\n        new LanguageOptionImp(\n            'en',\n            'English',\n            [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n            [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thi\", \"Fri\", \"Sat\"],\n            [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n            ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n            'MM/DD/YYYY',\n            'mm/dd/yy',\n            'Today',\n            'Clear',\n            'We',\n            0\n        ),\n        new LanguageOptionImp(\n            'es',\n            'Español',\n            [\"domingo\", \"lunes\", \"martes\", \"miércoles\", \"jueves\", \"viernes\", \"sábado\"],\n            [\"dom\", \"lun\", \"mar\", \"mié\", \"jue\", \"vie\", \"sáb\"],\n            [\"Do\", \"Lu\", \"Ma\", \"Mi\", \"Ju\", \"Vi\", \"Sá\"],\n            ['Ene', 'Feb', 'Mar', 'Abr', 'May', 'Jun', 'Jul', 'Ago', 'Sep', 'Oct', 'Nov', 'Dic'],\n            ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'],\n            'DD/MM/YYYY',\n            'dd/mm/yy',\n            'Hoy',\n            'Limpiar',\n            'Sm',\n            1\n        )\n    ]\n};\n","import LanguageOption from 'model/language-option';\nimport {LANGUAGE_CONSTANTS} from 'config/language.config';\nimport moment from 'moment';\n\nexport const getStartLanguage = (): LanguageOption => {\n    const userLanguage = localStorage.covid_19_current_language || navigator.language;\n    const currentLanguage = LANGUAGE_CONSTANTS.LANGUAGES.find((languageOption: LanguageOption) => userLanguage.includes(languageOption.value)) || LANGUAGE_CONSTANTS.LANGUAGES[0];\n    setLocale(currentLanguage);\n    return currentLanguage;\n};\n\nexport const setLocale = (language: LanguageOption): void => {\n    language = language.value ? language : LANGUAGE_CONSTANTS.LANGUAGES[0];\n    localStorage.covid_19_current_language = language.value;\n    !moment.locales().includes(language.value) && addLocaleToMoment(language);\n    moment.locale(language.value);\n};\n\nconst addLocaleToMoment = (language: LanguageOption): void => {\n    moment.locale(language.value, {\n        monthsShort : language.monthNamesShort,\n        months: language.monthNames\n    });\n};\n\nexport const getLocale = (languageCode: string): LanguageOption => {\n    return LANGUAGE_CONSTANTS.LANGUAGES.find((language: LanguageOption) => language.value === languageCode) || LANGUAGE_CONSTANTS.LANGUAGES[0];\n};\n","import MainAction from '../model/main.action';\nimport {LanguageActionTypesEnum} from './types';\nimport {ChangeLanguageAction} from './actions';\nimport LanguageState from './model/language.state';\nimport LanguageStateImp from './model/language.state.imp';\n\nconst initialState: LanguageState = new LanguageStateImp();\n\nconst languageReducer = (state = initialState, action: MainAction) => {\n    switch (action.type) {\n        case LanguageActionTypesEnum.CHANGE_LANGUAGE: {\n            return Object.assign({}, state, {\n                language: (action as ChangeLanguageAction).language\n            });\n        }\n        default:\n            return state;\n    }\n};\n\nexport default languageReducer;\n","/* istanbul ignore file */\nimport LanguageState from './language.state';\nimport LanguageOption from 'model/language-option';\nimport {getStartLanguage} from 'services/language.service';\n\nexport default class LanguageStateImp implements LanguageState {\n\n    language: LanguageOption;\n\n    constructor(language: LanguageOption = getStartLanguage()) {\n        this.language = language;\n    }\n\n}\n","/* istanbul ignore file */\nexport enum MapActionTypesEnum {\n    SET_MAP_DATA = 'map/set-data'\n}\n","import MainAction from '../model/main.action';\nimport {LoadingActionTypesEnum} from './types';\nimport LoadingState from './model/loading.state';\nimport LoadingStateImp from './model/loading.state.imp';\n\nconst initialState: LoadingState = new LoadingStateImp();\n\nconst loadingReducer = (state = initialState, action: MainAction) => {\n    switch (action.type) {\n        case LoadingActionTypesEnum.SHOW_LOADING: {\n            return Object.assign({}, state, {\n                loading: true,\n                loadingCounter: state.loadingCounter + 1\n            });\n        }\n        case LoadingActionTypesEnum.HIDE_LOADING: {\n            let loadingCounter: number = state.loadingCounter;\n\n            if (state.loadingCounter > 0) {\n                loadingCounter--;\n            }\n\n            return Object.assign({}, state, {\n                loading: loadingCounter !== 0,\n                loadingCounter: loadingCounter\n            });\n        }\n        default:\n            return state;\n    }\n};\n\nexport default loadingReducer;\n","/* istanbul ignore file */\nimport LoadingState from './loading.state';\n\nexport default class LoadingStateImp implements LoadingState {\n\n    loading: boolean;\n    loadingCounter: number;\n\n    constructor(loading: boolean = false, loadingCounter: number = 0) {\n        this.loading = loading;\n        this.loadingCounter = loadingCounter;\n    }\n\n}\n","/* istanbul ignore file */\nexport enum StatsActionTypesEnum {\n    SET_COUNTRIES = 'stats/set-countries'\n}\n","import MainAction from '../model/main.action';\nimport {MapActionTypesEnum} from './types';\nimport MapState from './model/map.state';\nimport MapStateImp from './model/map.state.imp';\nimport {SetMapDataAction} from './actions';\n\nconst initialState: MapState = new MapStateImp();\n\nconst mapReducer = (state = initialState, action: MainAction) => {\n    switch (action.type) {\n        case MapActionTypesEnum.SET_MAP_DATA: {\n            return Object.assign({}, state, {\n                data: (action as SetMapDataAction).data\n            });\n        }\n        default:\n            return state;\n    }\n};\n\nexport default mapReducer;\n","/* istanbul ignore file */\nimport MapState from './map.state';\n\nexport default class MapStateImp implements MapState {\n    data: any;\n\n    constructor(data: any = {}) {\n        this.data = data;\n    }\n}\n","import React, {FunctionComponent, ReactElement, useEffect, useState} from 'react';\nimport './map.component.scss';\nimport {useSelector} from 'react-redux';\nimport MainState from 'store/model/main.state';\nimport L from 'leaflet';\nimport {getCountryColor} from 'services/country.service';\nimport moment from 'moment';\nimport {FormattedMessage} from 'react-intl';\nimport {Calendar} from 'primereact/calendar';\nimport {MAP_CONSTANTS} from './config/map.config';\nimport {createMarkers} from './services/map.service';\n\nlet map: any;\nlet geoJsonLayer: any;\nlet markerGroup: any;\n\nconst MapComponent: FunctionComponent = (): ReactElement => {\n\tconst countries = useSelector((state: MainState) => state.stats.countries);\n\tconst mapData = useSelector((state: MainState) => state.map.data);\n\tconst language = useSelector((state: MainState) => state.language.language);\n\tconst [ markerInfo, setMarkerInfo ] = useState<ReactElement>();\n\tconst [ date, setDate ] = useState(moment().subtract(1, 'days'));\n\n\tuseEffect(() => {\n\t\tif (Object.keys(mapData).length && !map) {\n\t\t\tconst date = moment().subtract(1, 'days');\n\t\t\tmap = L.map('map').setView([0, 0], 2);\n\t\t\tL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n\t\t\t\tattribution: '© <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\n\t\t\t}).addTo(map);\n\n\t\t\tgeoJsonLayer = L.geoJSON(mapData, {\n\t\t\t\tstyle: (feature) => {\n\t\t\t\t\treturn {color: getCountryColor(feature, countries, date), weight: 1};\n\t\t\t\t}\n\t\t\t}).addTo(map);\n\n\t\t\tmarkerGroup = L.layerGroup().addTo(map);\n\t\t\tcreateMarkers(countries, markerGroup, date, setMarkerInfo);\n\t\t}\n\t}, [countries, mapData]);\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\tmap = undefined;\n\t\t};\n\t}, []);\n\n\tconst selectDate = (e: any): void => {\n\t\tconst date = moment(e.value);\n\t\tsetDate(date);\n\t\tmap.removeLayer(geoJsonLayer);\n\t\tmap.removeLayer(markerGroup);\n\n\t\tgeoJsonLayer = L.geoJSON(mapData, {\n\t\t\tstyle: (feature) => {\n\t\t\t\treturn {color: getCountryColor(feature, countries, date)};\n\t\t\t}\n\t\t}).addTo(map);\n\n\t\tmarkerGroup = L.layerGroup().addTo(map);\n\t\tcreateMarkers(countries, markerGroup, date, setMarkerInfo);\n\t\tsetMarkerInfo(undefined);\n\t};\n\n\treturn <div className=\"map-component\">\n\t\t<p><FormattedMessage id=\"map_empty_country\"/></p>\n\t\t<p><FormattedMessage id=\"new_cases\"/>{` = ${MAP_CONSTANTS.COLORS.LEVEL_1.limit}`}<span className=\"color-span\" style={{backgroundColor: MAP_CONSTANTS.COLORS.LEVEL_1.color}}/></p>\n\t\t<p><FormattedMessage id=\"new_cases\"/>{` <= ${MAP_CONSTANTS.COLORS.LEVEL_2.limit}`}<span className=\"color-span\" style={{backgroundColor: MAP_CONSTANTS.COLORS.LEVEL_2.color}}/></p>\n\t\t<p><FormattedMessage id=\"new_cases\"/>{` <= ${MAP_CONSTANTS.COLORS.LEVEL_3.limit}`}<span className=\"color-span\" style={{backgroundColor: MAP_CONSTANTS.COLORS.LEVEL_3.color}}/></p>\n\t\t<p><FormattedMessage id=\"new_cases\"/>{` <= ${MAP_CONSTANTS.COLORS.LEVEL_4.limit}`}<span className=\"color-span\" style={{backgroundColor: MAP_CONSTANTS.COLORS.LEVEL_4.color}}/></p>\n\t\t<p><FormattedMessage id=\"new_cases\"/>{` > ${MAP_CONSTANTS.COLORS.LEVEL_4.limit}`}<span className=\"color-span\" style={{backgroundColor: MAP_CONSTANTS.COLORS.LEVEL_5.color}}/></p>\n\t\t<Calendar value={date.toDate()} onChange={selectDate} maxDate={moment().subtract(1, 'days').toDate()}\n\t\t\t\t  minDate={moment('01-21-2020', \"DD-MM-YYYY\").toDate()} locale={language}\n\t\t\t\t  dateFormat={language.calendarDateFormat} readOnlyInput={true}\n\t\t/>\n\t\t{ markerInfo && <div className=\"marker-info\">\n\t\t\t<i className=\"pi pi-times\" onClick={() => setMarkerInfo(undefined)}/>\n\t\t\t{ markerInfo }\n        </div> }\n\t\t<div id=\"map\"/>\n\t</div>;\n};\n\nexport default MapComponent;\n","import MainAction from '../model/main.action';\nimport {StatsActionTypesEnum} from './types';\nimport StatsState from './model/stats.state';\nimport StatsStateImp from './model/stats.state.imp';\nimport {SetCountriesAction} from './actions';\n\nconst initialState: StatsState = new StatsStateImp();\n\nconst statsReducer = (state = initialState, action: MainAction) => {\n    switch (action.type) {\n        case StatsActionTypesEnum.SET_COUNTRIES: {\n            return Object.assign({}, state, {\n                countries: (action as SetCountriesAction).countries\n            });\n        }\n        default:\n            return state;\n    }\n};\n\nexport default statsReducer;\n","/* istanbul ignore file */\nimport StatsState from './stats.state';\nimport Country from 'model/country';\n\nexport default class StatsStateImp implements StatsState {\n    countries: Country[];\n\n    constructor(countries: Country[] = []) {\n        this.countries = countries;\n    }\n}\n","/* istanbul ignore file */\nimport {combineReducers} from 'redux';\nimport currentViewReducer from './current-view/reducer';\nimport languageReducer from './language/reducer';\nimport loadingReducer from './loading/reducer';\nimport mapReducer from './map/reducer';\nimport statsReducer from './stats/reducer';\n\nexport const mainReducer = combineReducers({\n    currentView: currentViewReducer,\n    language: languageReducer,\n    loading: loadingReducer,\n    map: mapReducer,\n    stats: statsReducer\n});\n","/* istanbul ignore file */\nimport MainAction from '../model/main.action';\nimport {LoadingActionTypesEnum} from './types';\n\nexport const SHOW_LOADING_ACTION: MainAction = {\n    type: LoadingActionTypesEnum.SHOW_LOADING\n};\n\nexport const HIDE_LOADING_ACTION: MainAction = {\n    type: LoadingActionTypesEnum.HIDE_LOADING\n};\n","import Country from './country';\nimport CountryInfo from './country-info';\n\nexport default class CountryImp implements Country {\n\tcountry: string;\n\tinfo: CountryInfo[];\n\n\tconstructor(country: string = '', info: CountryInfo[] = []) {\n\t\tthis.country = country;\n\t\tthis.info = info;\n\t}\n}\n","interface AppConfig {\n\tROUTES: {\n\t\tROOT: string;\n\t\tHOME: string;\n\t\tCOUNTRY: string;\n\t\tCOUNTRY_INFO: string;\n\t};\n\tENDPOINTS: {\n\t\tFULL_DATA: string;\n\t\tMAP_DATA: string;\n\t}\n}\n\nexport const APP_CONSTANTS: AppConfig = {\n\tROUTES: {\n\t\tROOT: '/',\n\t\tHOME: '/home',\n\t\tCOUNTRY: '/country',\n\t\tCOUNTRY_INFO: '/country/:countryName'\n\t},\n\tENDPOINTS: {\n\t\tFULL_DATA: 'https://covid.ourworldindata.org/data/full_data.csv',\n\t\tMAP_DATA: `${process.env.PUBLIC_URL}/countries.geojson`\n\t}\n};\n","import CountryInfo from './country-info';\nimport moment, {Moment} from 'moment';\n\nexport default class CountryInfoImp implements CountryInfo {\n\tdate: Moment;\n\tnewCases: number;\n\tnewDeaths: number;\n\ttotalCases: number;\n\ttotalDeaths: number;\n\n\tconstructor(date: Moment = moment(), newCases: number = 0, newDeaths: number = 0, totalCases: number = 0, totalDeaths: number = 0) {\n\t\tthis.date = date;\n\t\tthis.newCases = newCases;\n\t\tthis.newDeaths = newDeaths;\n\t\tthis.totalCases = totalCases;\n\t\tthis.totalDeaths = totalDeaths;\n\t}\n}\n","import ColorLevel from './color-level';\n\nexport default class ColorLevelImp implements ColorLevel {\n\tlimit: number;\n\tcolor: string;\n\n\tconstructor(limit: number = 0, color: string = '') {\n\t\tthis.limit = limit;\n\t\tthis.color = color;\n\t}\n}\n","import CountryCoordinates from './country-coordinates';\nimport {LatLngTuple} from 'leaflet';\n\nexport default class CountryCoordinatesImp implements CountryCoordinates {\n\tname: string;\n\tlatLong: LatLngTuple;\n\n\tconstructor(name: string = '', latLong: LatLngTuple = [0, 0]) {\n\t\tthis.name = name;\n\t\tthis.latLong = latLong;\n\t}\n}\n","import ColorLevel from '../model/color-level';\nimport ColorLevelImp from '../model/color-level.imp';\nimport CountryCoordinates from '../model/country-coordinates';\nimport CountryCoordinatesImp from '../model/country-coordinates.imp';\n\ninterface MapConfig {\n\tCOLORS: {\n\t\tLEVEL_1: ColorLevel;\n\t\tLEVEL_2: ColorLevel;\n\t\tLEVEL_3: ColorLevel;\n\t\tLEVEL_4: ColorLevel;\n\t\tLEVEL_5: ColorLevel;\n\t};\n\tCOUNTRIES_LAT_LONG: CountryCoordinates[];\n}\n\nexport const MAP_CONSTANTS: MapConfig = {\n\tCOLORS: {\n\t\tLEVEL_1: new ColorLevelImp(0, '#30D158'),\n\t\tLEVEL_2: new ColorLevelImp(250, '#FDFF1B'),\n\t\tLEVEL_3: new ColorLevelImp(500, '#ffb300'),\n\t\tLEVEL_4: new ColorLevelImp(1000, '#ff6600'),\n\t\tLEVEL_5: new ColorLevelImp(2000, '#FF3B30'),\n\t},\n\tCOUNTRIES_LAT_LONG: [\n\t\tnew CountryCoordinatesImp('Aruba', [12.5,-69.96666666]),\n\t\tnew CountryCoordinatesImp('Afghanistan', [33,65]),\n\t\tnew CountryCoordinatesImp('Angola', [-12.5,18.5]),\n\t\tnew CountryCoordinatesImp('Anguilla', [18.25,-63.16666666]),\n\t\tnew CountryCoordinatesImp('Åland Islands', [60.116667,19.9]),\n\t\tnew CountryCoordinatesImp('Albania', [41,20]),\n\t\tnew CountryCoordinatesImp('Andorra', [42.5,1.5]),\n\t\tnew CountryCoordinatesImp('United Arab Emirates', [24,54]),\n\t\tnew CountryCoordinatesImp('Argentina', [-34,-64]),\n\t\tnew CountryCoordinatesImp('Armenia', [40,45]),\n\t\tnew CountryCoordinatesImp('American Samoa', [-14.33333333,-170]),\n\t\tnew CountryCoordinatesImp('Antarctica', [-90,0]),\n\t\tnew CountryCoordinatesImp('French Southern and Antarctic Lands', [-49.25,69.167]),\n\t\tnew CountryCoordinatesImp('Antigua and Barbuda', [17.05,-61.8]),\n\t\tnew CountryCoordinatesImp('Australia', [-27,133]),\n\t\tnew CountryCoordinatesImp('Austria', [47.33333333,13.33333333]),\n\t\tnew CountryCoordinatesImp('Azerbaijan', [40.5,47.5]),\n\t\tnew CountryCoordinatesImp('Burundi', [-3.5,30]),\n\t\tnew CountryCoordinatesImp('Belgium', [50.83333333,4]),\n\t\tnew CountryCoordinatesImp('Benin', [9.5,2.25]),\n\t\tnew CountryCoordinatesImp('Burkina Faso', [13,-2]),\n\t\tnew CountryCoordinatesImp('Bangladesh', [24,90]),\n\t\tnew CountryCoordinatesImp('Bulgaria', [43,25]),\n\t\tnew CountryCoordinatesImp('Bahrain', [26,50.55]),\n\t\tnew CountryCoordinatesImp('Bahamas', [24.25,-76]),\n\t\tnew CountryCoordinatesImp('Bosnia and Herzegovina', [44,18]),\n\t\tnew CountryCoordinatesImp('Saint Barthélemy', [18.5,-63.41666666]),\n\t\tnew CountryCoordinatesImp('Belarus', [53,28]),\n\t\tnew CountryCoordinatesImp('Belize', [17.25,-88.75]),\n\t\tnew CountryCoordinatesImp('Bermuda', [32.33333333,-64.75]),\n\t\tnew CountryCoordinatesImp('Bolivia', [-17,-65]),\n\t\tnew CountryCoordinatesImp('Brazil', [-10,-55]),\n\t\tnew CountryCoordinatesImp('Barbados', [13.16666666,-59.53333333]),\n\t\tnew CountryCoordinatesImp('Brunei', [4.5,114.66666666]),\n\t\tnew CountryCoordinatesImp('Bhutan', [27.5,90.5]),\n\t\tnew CountryCoordinatesImp('Bouvet Island', [-54.43333333,3.4]),\n\t\tnew CountryCoordinatesImp('Botswana', [-22,24]),\n\t\tnew CountryCoordinatesImp('Central African Republic', [7,21]),\n\t\tnew CountryCoordinatesImp('Canada', [60,-95]),\n\t\tnew CountryCoordinatesImp('Cocos (Keeling) Islands', [-12.5,96.83333333]),\n\t\tnew CountryCoordinatesImp('Switzerland', [47,8]),\n\t\tnew CountryCoordinatesImp('Chile', [-30,-71]),\n\t\tnew CountryCoordinatesImp('China', [35,105]),\n\t\tnew CountryCoordinatesImp('Ivory Coast', [8,-5]),\n\t\tnew CountryCoordinatesImp('Cameroon', [6,12]),\n\t\tnew CountryCoordinatesImp('DR Congo', [0,25]),\n\t\tnew CountryCoordinatesImp('Republic of the Congo', [-1,15]),\n\t\tnew CountryCoordinatesImp('Cook Islands', [-21.23333333,-159.76666666]),\n\t\tnew CountryCoordinatesImp('Colombia', [4,-72]),\n\t\tnew CountryCoordinatesImp('Comoros', [-12.16666666,44.25]),\n\t\tnew CountryCoordinatesImp('Cape Verde', [16,-24]),\n\t\tnew CountryCoordinatesImp('Costa Rica', [10,-84]),\n\t\tnew CountryCoordinatesImp('Cuba', [21.5,-80]),\n\t\tnew CountryCoordinatesImp('Curaçao', [12.116667,-68.933333]),\n\t\tnew CountryCoordinatesImp('Christmas Island', [-10.5,105.66666666]),\n\t\tnew CountryCoordinatesImp('Cayman Islands', [19.5,-80.5]),\n\t\tnew CountryCoordinatesImp('Cyprus', [35,33]),\n\t\tnew CountryCoordinatesImp('Czech Republic', [49.75,15.5]),\n\t\tnew CountryCoordinatesImp('Germany', [51,9]),\n\t\tnew CountryCoordinatesImp('Djibouti', [11.5,43]),\n\t\tnew CountryCoordinatesImp('Dominica', [15.41666666,-61.33333333]),\n\t\tnew CountryCoordinatesImp('Denmark', [56,10]),\n\t\tnew CountryCoordinatesImp('Dominican Republic', [19,-70.66666666]),\n\t\tnew CountryCoordinatesImp('Algeria', [28,3]),\n\t\tnew CountryCoordinatesImp('Ecuador', [-2,-77.5]),\n\t\tnew CountryCoordinatesImp('Egypt', [27,30]),\n\t\tnew CountryCoordinatesImp('Eritrea', [15,39]),\n\t\tnew CountryCoordinatesImp('Western Sahara', [24.5,-13]),\n\t\tnew CountryCoordinatesImp('Spain', [40,-4]),\n\t\tnew CountryCoordinatesImp('Estonia', [59,26]),\n\t\tnew CountryCoordinatesImp('Ethiopia', [8,38]),\n\t\tnew CountryCoordinatesImp('Finland', [64,26]),\n\t\tnew CountryCoordinatesImp('Fiji', [-18,175]),\n\t\tnew CountryCoordinatesImp('Falkland Islands', [-51.75,-59]),\n\t\tnew CountryCoordinatesImp('France', [46,2]),\n\t\tnew CountryCoordinatesImp('Faroe Islands', [62,-7]),\n\t\tnew CountryCoordinatesImp('Micronesia', [6.91666666,158.25]),\n\t\tnew CountryCoordinatesImp('Gabon', [-1,11.75]),\n\t\tnew CountryCoordinatesImp('United Kingdom', [54,-2]),\n\t\tnew CountryCoordinatesImp('Georgia', [42,43.5]),\n\t\tnew CountryCoordinatesImp('Guernsey', [49.46666666,-2.58333333]),\n\t\tnew CountryCoordinatesImp('Ghana', [8,-2]),\n\t\tnew CountryCoordinatesImp('Gibraltar', [36.13333333,-5.35]),\n\t\tnew CountryCoordinatesImp('Guinea', [11,-10]),\n\t\tnew CountryCoordinatesImp('Guadeloupe', [16.25,-61.583333]),\n\t\tnew CountryCoordinatesImp('Gambia', [13.46666666,-16.56666666]),\n\t\tnew CountryCoordinatesImp('Guinea-Bissau', [12,-15]),\n\t\tnew CountryCoordinatesImp('Equatorial Guinea', [2,10]),\n\t\tnew CountryCoordinatesImp('Greece', [39,22]),\n\t\tnew CountryCoordinatesImp('Grenada', [12.11666666,-61.66666666]),\n\t\tnew CountryCoordinatesImp('Greenland', [72,-40]),\n\t\tnew CountryCoordinatesImp('Guatemala', [15.5,-90.25]),\n\t\tnew CountryCoordinatesImp('French Guiana', [4,-53]),\n\t\tnew CountryCoordinatesImp('Guam', [13.46666666,144.78333333]),\n\t\tnew CountryCoordinatesImp('Guyana', [5,-59]),\n\t\tnew CountryCoordinatesImp('Hong Kong', [22.267,114.188]),\n\t\tnew CountryCoordinatesImp('Honduras', [15,-86.5]),\n\t\tnew CountryCoordinatesImp('Croatia', [45.16666666,15.5]),\n\t\tnew CountryCoordinatesImp('Haiti', [19,-72.41666666]),\n\t\tnew CountryCoordinatesImp('Hungary', [47,20]),\n\t\tnew CountryCoordinatesImp('Indonesia', [-5,120]),\n\t\tnew CountryCoordinatesImp('Isle of Man', [54.25,-4.5]),\n\t\tnew CountryCoordinatesImp('India', [20,77]),\n\t\tnew CountryCoordinatesImp('British Indian Ocean Territory', [-6,71.5]),\n\t\tnew CountryCoordinatesImp('Ireland', [53,-8]),\n\t\tnew CountryCoordinatesImp('Iran', [32,53]),\n\t\tnew CountryCoordinatesImp('Iraq', [33,44]),\n\t\tnew CountryCoordinatesImp('Iceland', [65,-18]),\n\t\tnew CountryCoordinatesImp('Israel', [31.47,35.13]),\n\t\tnew CountryCoordinatesImp('Italy', [42.83333333,12.83333333]),\n\t\tnew CountryCoordinatesImp('Jamaica', [18.25,-77.5]),\n\t\tnew CountryCoordinatesImp('Jersey', [49.25,-2.16666666]),\n\t\tnew CountryCoordinatesImp('Jordan', [31,36]),\n\t\tnew CountryCoordinatesImp('Japan', [36,138]),\n\t\tnew CountryCoordinatesImp('Kazakhstan', [48,68]),\n\t\tnew CountryCoordinatesImp('Kenya', [1,38]),\n\t\tnew CountryCoordinatesImp('Kyrgyzstan', [41,75]),\n\t\tnew CountryCoordinatesImp('Cambodia', [13,105]),\n\t\tnew CountryCoordinatesImp('Kiribati', [1.41666666,173]),\n\t\tnew CountryCoordinatesImp('Saint Kitts and Nevis', [17.33333333,-62.75]),\n\t\tnew CountryCoordinatesImp('South Korea', [37,127.5]),\n\t\tnew CountryCoordinatesImp('Kosovo', [42.666667,21.166667]),\n\t\tnew CountryCoordinatesImp('Kuwait', [29.5,45.75]),\n\t\tnew CountryCoordinatesImp('Laos', [18,105]),\n\t\tnew CountryCoordinatesImp('Lebanon', [33.83333333,35.83333333]),\n\t\tnew CountryCoordinatesImp('Liberia', [6.5,-9.5]),\n\t\tnew CountryCoordinatesImp('Libya', [25,17]),\n\t\tnew CountryCoordinatesImp('Saint Lucia', [13.88333333,-60.96666666]),\n\t\tnew CountryCoordinatesImp('Liechtenstein', [47.26666666,9.53333333]),\n\t\tnew CountryCoordinatesImp('Sri Lanka', [7,81]),\n\t\tnew CountryCoordinatesImp('Lesotho', [-29.5,28.5]),\n\t\tnew CountryCoordinatesImp('Lithuania', [56,24]),\n\t\tnew CountryCoordinatesImp('Luxembourg', [49.75,6.16666666]),\n\t\tnew CountryCoordinatesImp('Latvia', [57,25]),\n\t\tnew CountryCoordinatesImp('Macau', [22.16666666,113.55]),\n\t\tnew CountryCoordinatesImp('Saint Martin', [18.08333333,-63.95]),\n\t\tnew CountryCoordinatesImp('Morocco', [32,-5]),\n\t\tnew CountryCoordinatesImp('Monaco', [43.73333333,7.4]),\n\t\tnew CountryCoordinatesImp('Moldova', [47,29]),\n\t\tnew CountryCoordinatesImp('Madagascar', [-20,47]),\n\t\tnew CountryCoordinatesImp('Maldives', [3.25,73]),\n\t\tnew CountryCoordinatesImp('Mexico', [23,-102]),\n\t\tnew CountryCoordinatesImp('Marshall Islands', [9,168]),\n\t\tnew CountryCoordinatesImp('Macedonia', [41.83333333,22]),\n\t\tnew CountryCoordinatesImp('Mali', [17,-4]),\n\t\tnew CountryCoordinatesImp('Malta', [35.83333333,14.58333333]),\n\t\tnew CountryCoordinatesImp('Myanmar', [22,98]),\n\t\tnew CountryCoordinatesImp('Montenegro', [42.5,19.3]),\n\t\tnew CountryCoordinatesImp('Mongolia', [46,105]),\n\t\tnew CountryCoordinatesImp('Northern Mariana Islands', [15.2,145.75]),\n\t\tnew CountryCoordinatesImp('Mozambique', [-18.25,35]),\n\t\tnew CountryCoordinatesImp('Mauritania', [20,-12]),\n\t\tnew CountryCoordinatesImp('Montserrat', [16.75,-62.2]),\n\t\tnew CountryCoordinatesImp('Martinique', [14.666667,-61]),\n\t\tnew CountryCoordinatesImp('Mauritius', [-20.28333333,57.55]),\n\t\tnew CountryCoordinatesImp('Malawi', [-13.5,34]),\n\t\tnew CountryCoordinatesImp('Malaysia', [2.5,112.5]),\n\t\tnew CountryCoordinatesImp('Mayotte', [-12.83333333,45.16666666]),\n\t\tnew CountryCoordinatesImp('Namibia', [-22,17]),\n\t\tnew CountryCoordinatesImp('New Caledonia', [-21.5,165.5]),\n\t\tnew CountryCoordinatesImp('Niger', [16,8]),\n\t\tnew CountryCoordinatesImp('Norfolk Island', [-29.03333333,167.95]),\n\t\tnew CountryCoordinatesImp('Nigeria', [10,8]),\n\t\tnew CountryCoordinatesImp('Nicaragua', [13,-85]),\n\t\tnew CountryCoordinatesImp('Niue', [-19.03333333,-169.86666666]),\n\t\tnew CountryCoordinatesImp('Netherlands', [52.5,5.75]),\n\t\tnew CountryCoordinatesImp('Norway', [62,10]),\n\t\tnew CountryCoordinatesImp('Nepal', [28,84]),\n\t\tnew CountryCoordinatesImp('Nauru', [-0.53333333,166.91666666]),\n\t\tnew CountryCoordinatesImp('New Zealand', [-41,174]),\n\t\tnew CountryCoordinatesImp('Oman', [21,57]),\n\t\tnew CountryCoordinatesImp('Pakistan', [30,70]),\n\t\tnew CountryCoordinatesImp('Panama', [9,-80]),\n\t\tnew CountryCoordinatesImp('Pitcairn Islands', [-25.06666666,-130.1]),\n\t\tnew CountryCoordinatesImp('Peru', [-10,-76]),\n\t\tnew CountryCoordinatesImp('Philippines', [13,122]),\n\t\tnew CountryCoordinatesImp('Palau', [7.5,134.5]),\n\t\tnew CountryCoordinatesImp('Papua New Guinea', [-6,147]),\n\t\tnew CountryCoordinatesImp('Poland', [52,20]),\n\t\tnew CountryCoordinatesImp('Puerto Rico', [18.25,-66.5]),\n\t\tnew CountryCoordinatesImp('North Korea', [40,127]),\n\t\tnew CountryCoordinatesImp('Portugal', [39.5,-8]),\n\t\tnew CountryCoordinatesImp('Paraguay', [-23,-58]),\n\t\tnew CountryCoordinatesImp('Palestine', [31.9,35.2]),\n\t\tnew CountryCoordinatesImp('French Polynesia', [-15,-140]),\n\t\tnew CountryCoordinatesImp('Qatar', [25.5,51.25]),\n\t\tnew CountryCoordinatesImp('Réunion', [-21.15,55.5]),\n\t\tnew CountryCoordinatesImp('Romania', [46,25]),\n\t\tnew CountryCoordinatesImp('Russia', [60,100]),\n\t\tnew CountryCoordinatesImp('Rwanda', [-2,30]),\n\t\tnew CountryCoordinatesImp('Saudi Arabia', [25,45]),\n\t\tnew CountryCoordinatesImp('Sudan', [15,30]),\n\t\tnew CountryCoordinatesImp('Senegal', [14,-14]),\n\t\tnew CountryCoordinatesImp('Singapore', [1.36666666,103.8]),\n\t\tnew CountryCoordinatesImp('South Georgia', [-54.5,-37]),\n\t\tnew CountryCoordinatesImp('Svalbard and Jan Mayen', [78,20]),\n\t\tnew CountryCoordinatesImp('Solomon Islands', [-8,159]),\n\t\tnew CountryCoordinatesImp('Sierra Leone', [8.5,-11.5]),\n\t\tnew CountryCoordinatesImp('El Salvador', [13.83333333,-88.91666666]),\n\t\tnew CountryCoordinatesImp('San Marino', [43.76666666,12.41666666]),\n\t\tnew CountryCoordinatesImp('Somalia', [10,49]),\n\t\tnew CountryCoordinatesImp('Saint Pierre and Miquelon', [46.83333333,-56.33333333]),\n\t\tnew CountryCoordinatesImp('Serbia', [44,21]),\n\t\tnew CountryCoordinatesImp('South Sudan', [7,30]),\n\t\tnew CountryCoordinatesImp('São Tomé and Príncipe', [1,7]),\n\t\tnew CountryCoordinatesImp('Suriname', [4,-56]),\n\t\tnew CountryCoordinatesImp('Slovakia', [48.66666666,19.5]),\n\t\tnew CountryCoordinatesImp('Slovenia', [46.11666666,14.81666666]),\n\t\tnew CountryCoordinatesImp('Sweden', [62,15]),\n\t\tnew CountryCoordinatesImp('Swaziland', [-26.5,31.5]),\n\t\tnew CountryCoordinatesImp('Sint Maarten', [18.033333,-63.05]),\n\t\tnew CountryCoordinatesImp('Seychelles', [-4.58333333,55.66666666]),\n\t\tnew CountryCoordinatesImp('Syria', [35,38]),\n\t\tnew CountryCoordinatesImp('Turks and Caicos Islands', [21.75,-71.58333333]),\n\t\tnew CountryCoordinatesImp('Chad', [15,19]),\n\t\tnew CountryCoordinatesImp('Togo', [8,1.16666666]),\n\t\tnew CountryCoordinatesImp('Thailand', [15,100]),\n\t\tnew CountryCoordinatesImp('Tajikistan', [39,71]),\n\t\tnew CountryCoordinatesImp('Tokelau', [-9,-172]),\n\t\tnew CountryCoordinatesImp('Turkmenistan', [40,60]),\n\t\tnew CountryCoordinatesImp('Timor-Leste', [-8.83333333,125.91666666]),\n\t\tnew CountryCoordinatesImp('Tonga', [-20,-175]),\n\t\tnew CountryCoordinatesImp('Trinidad and Tobago', [11,-61]),\n\t\tnew CountryCoordinatesImp('Tunisia', [34,9]),\n\t\tnew CountryCoordinatesImp('Turkey', [39,35]),\n\t\tnew CountryCoordinatesImp('Tuvalu', [-8,178]),\n\t\tnew CountryCoordinatesImp('Taiwan', [23.5,121]),\n\t\tnew CountryCoordinatesImp('Tanzania', [-6,35]),\n\t\tnew CountryCoordinatesImp('Uganda', [1,32]),\n\t\tnew CountryCoordinatesImp('Ukraine', [49,32]),\n\t\tnew CountryCoordinatesImp('United States Minor Outlying Islands', [19.2911437,166.618332]),\n\t\tnew CountryCoordinatesImp('Uruguay', [-33,-56]),\n\t\tnew CountryCoordinatesImp('United States', [38,-97]),\n\t\tnew CountryCoordinatesImp('Uzbekistan', [41,64]),\n\t\tnew CountryCoordinatesImp('Vatican City', [41.9,12.45]),\n\t\tnew CountryCoordinatesImp('Saint Vincent and the Grenadines', [13.25,-61.2]),\n\t\tnew CountryCoordinatesImp('Venezuela', [8,-66]),\n\t\tnew CountryCoordinatesImp('British Virgin Islands', [18.431383,-64.62305]),\n\t\tnew CountryCoordinatesImp('United States Virgin Islands', [18.35,-64.933333]),\n\t\tnew CountryCoordinatesImp('Vietnam', [16.16666666,107.83333333]),\n\t\tnew CountryCoordinatesImp('Vanuatu', [-16,167]),\n\t\tnew CountryCoordinatesImp('Wallis and Futuna', [-13.3,-176.2]),\n\t\tnew CountryCoordinatesImp('Samoa', [-13.58333333,-172.33333333]),\n\t\tnew CountryCoordinatesImp('Yemen', [15,48]),\n\t\tnew CountryCoordinatesImp('South Africa', [-29,24]),\n\t\tnew CountryCoordinatesImp('Zambia', [-15,30]),\n\t\tnew CountryCoordinatesImp('Zimbabwe', [-20,30])\n\t]\n};\n","import Country from 'model/country';\nimport axios from 'axios';\nimport CountryImp from 'model/country.imp';\nimport {APP_CONSTANTS} from 'config/app.config';\nimport CountryInfoImp from 'model/country-info.imp';\nimport moment, {Moment} from 'moment';\nimport CountryInfo from 'model/country-info';\nimport {MAP_CONSTANTS} from '../components/main/components/map/config/map.config';\n\nexport const loadCountriesInfo = (): Promise<Country[]> => {\n\treturn axios.get(APP_CONSTANTS.ENDPOINTS.FULL_DATA)\n\t\t.then(res => {\n\t\t\tconst data = res.data.split('\\n');\n\t\t\tdata.shift();\n\t\t\tconst countries: Country[] = [];\n\t\t\tlet currentCountry = new CountryImp();\n\n\t\t\tdata.forEach((row: string) => {\n\t\t\t\tconst info = row.split(',');\n\n\t\t\t\tif (info[1] === currentCountry.country) {\n\t\t\t\t\tcurrentCountry.info.push(new CountryInfoImp(\n\t\t\t\t\t\tmoment(info[0]),\n\t\t\t\t\t\tNumber(info[2] || 0),\n\t\t\t\t\t\tNumber(info[3] || 0),\n\t\t\t\t\t\tNumber(info[4] || 0),\n\t\t\t\t\t\tNumber(info[5] || 0)\n\t\t\t\t\t));\n\t\t\t\t} else {\n\t\t\t\t\tif (currentCountry.country) {\n\t\t\t\t\t\tcountries.push(currentCountry);\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentCountry = new CountryImp(info[1], [new CountryInfoImp(\n\t\t\t\t\t\tmoment(info[0]),\n\t\t\t\t\t\tNumber(info[2] || 0),\n\t\t\t\t\t\tNumber(info[3] || 0),\n\t\t\t\t\t\tNumber(info[4] || 0),\n\t\t\t\t\t\tNumber(info[5] || 0)\n\t\t\t\t\t)]);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn countries;\n\t\t})\n\t\t.catch(err =>[]);\n};\n\nexport const loadMapInfo = (): Promise<any> => {\n\treturn axios.get(APP_CONSTANTS.ENDPOINTS.MAP_DATA)\n\t\t.then(res => res.data)\n\t\t.catch(err => {});\n};\n\nexport const getCountryColor = (feature: any, countries: Country[], date: Moment): string => {\n\tconst country = countries.find((country: Country) => country.country === feature.properties.name || country.country === feature.properties.admin) || new CountryImp();\n\tconst info = country.info.find((countryInfo: CountryInfo) => countryInfo.date.format('DD/MM/YYYY') === date.format('DD/MM/YYYY')) || new CountryInfoImp(undefined, -1);\n\n\tif (info.newCases < 0) {\n\t\treturn  'lightgray';\n\t} else if (info.newCases <= MAP_CONSTANTS.COLORS.LEVEL_1.limit) {\n\t\treturn  MAP_CONSTANTS.COLORS.LEVEL_1.color;\n\t} else if (info.newCases <= MAP_CONSTANTS.COLORS.LEVEL_2.limit) {\n\t\treturn  MAP_CONSTANTS.COLORS.LEVEL_2.color;\n\t} else if (info.newCases <= MAP_CONSTANTS.COLORS.LEVEL_3.limit) {\n\t\treturn  MAP_CONSTANTS.COLORS.LEVEL_3.color;\n\t} else if (info.newCases <= MAP_CONSTANTS.COLORS.LEVEL_4.limit) {\n\t\treturn  MAP_CONSTANTS.COLORS.LEVEL_4.color;\n\t} else {\n\t\treturn  MAP_CONSTANTS.COLORS.LEVEL_5.color;\n\t}\n};\n","/* istanbul ignore file */\nimport MainAction from '../model/main.action';\nimport {StatsActionTypesEnum} from './types';\nimport Country from 'model/country';\n\nexport interface SetCountriesAction extends MainAction {\n    countries: Country[];\n}\n\nexport const SET_COUNTRIES_ACTION: SetCountriesAction = {\n    type: StatsActionTypesEnum.SET_COUNTRIES,\n    countries: []\n};\n","import {LanguageActionTypesEnum} from './types';\nimport LanguageOption from 'model/language-option';\nimport {LANGUAGE_CONSTANTS} from 'config/language.config';\nimport MainAction from '../model/main.action';\n\nexport interface ChangeLanguageAction extends MainAction {\n    language: LanguageOption;\n}\n\nexport const CHANGE_LANGUAGE_ACTION: ChangeLanguageAction = {\n    type: LanguageActionTypesEnum.CHANGE_LANGUAGE,\n    language: LANGUAGE_CONSTANTS.LANGUAGES[0]\n};\n","import React, {FunctionComponent, ReactElement} from 'react';\nimport './language-selector.component.scss';\nimport {Dropdown} from 'primereact/dropdown';\nimport {LANGUAGE_CONSTANTS} from 'config/language.config';\nimport LanguageOption from 'model/language-option';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {getLocale, setLocale} from 'services/language.service';\nimport {CHANGE_LANGUAGE_ACTION} from 'store/language/actions';\nimport MainState from 'store/model/main.state';\n\nconst LanguageSelectorComponent: FunctionComponent = (): ReactElement => {\n    const dispatch = useDispatch();\n    const language = useSelector((state: MainState) => state.language.language);\n\n    const handleSelectLanguage = (e: { originalEvent: Event, value: string }): void => {\n        const selectedLanguage = getLocale(e.value);\n        const changeLanguageAction = {...CHANGE_LANGUAGE_ACTION};\n        changeLanguageAction.language = selectedLanguage;\n        dispatch(changeLanguageAction);\n        setLocale(selectedLanguage);\n    };\n\n    const languageTemplate = (option: LanguageOption): ReactElement => {\n        return <div className=\"language-option\">\n            <img src={process.env.PUBLIC_URL + '/country-flags/' + option.value + '.png'} alt={option.label}/>\n            <span> { option.label }</span>\n        </div>;\n    };\n\n    return <div className=\"language-selector-component hidden-mobile\">\n        <Dropdown\n            options={LANGUAGE_CONSTANTS.LANGUAGES}\n            value={language.value}\n            onChange={handleSelectLanguage}\n            itemTemplate={languageTemplate}\n        />\n    </div>;\n};\n\nexport default LanguageSelectorComponent;\n","import React, {FunctionComponent, ReactElement} from 'react';\nimport './header.component.scss';\nimport LanguageSelectorComponent from './components/language-selector/language-selector.component';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router-dom';\nimport {APP_CONSTANTS} from 'config/app.config';\n\nconst HeaderComponent: FunctionComponent = (): ReactElement => {\n\treturn <div className=\"header-component row\">\n\t\t<div className=\"col-sm-9 offset-md-0 col-md-9 offset-lg-2 col-lg-8 vertically-centered title\">\n\t\t\t<Link to={APP_CONSTANTS.ROUTES.ROOT}>\n\t\t\t\t<h2 className=\"desktop-hidden\">COVID-19</h2>\n\t\t\t\t<h2 className=\"mobile-hidden\"><FormattedMessage id=\"header\"/></h2>\n\t\t\t</Link>\n\t\t</div>\n\t\t<div className=\"col-sm-3 col-lg-2 language-selector-container vertically-centered\">\n\t\t\t<LanguageSelectorComponent/>\n\t\t</div>\n\t</div>;\n};\n\nexport default HeaderComponent;\n","import es from './translations/es.json';\nimport en from './translations/en.json';\n\nexport const i18n = { es, en };\n","interface ChartInfoConfig {\n\tCOLORS: {\n\t\tNEW_CASES: string;\n\t\tNEW_DEATHS: string;\n\t\tTOTAL_CASES: string;\n\t\tTOTAL_DEATHS: string;\n\t};\n}\n\nexport const CHART_INFO_CONSTANTS: ChartInfoConfig = {\n\tCOLORS: {\n\t\tNEW_CASES: '#FF9F0A',\n\t\tNEW_DEATHS: '#FF3B30',\n\t\tTOTAL_CASES: '#c87b0a',\n\t\tTOTAL_DEATHS: '#9d2b26'\n\t}\n};\n","import React, {FunctionComponent, ReactElement, useEffect, useState} from 'react';\nimport './chart-info.component.scss';\nimport {useIntl} from 'react-intl';\nimport {Chart} from 'primereact/chart';\nimport CountryInfo from 'model/country-info';\nimport {CHART_INFO_CONSTANTS} from './config/chart-info.config';\n\ninterface ChartInfoComponent {\n\tcountryInfo: CountryInfo[];\n}\n\nconst ChartInfoComponent: FunctionComponent<ChartInfoComponent> = ({countryInfo}): ReactElement => {\n\tconst intl = useIntl();\n\tconst [data, setData] = useState({});\n\tconst chartOptions = {\n\t\tanimation: false,\n\t\tresponsive: true\n\t};\n\n\tuseEffect(() => {\n\t\tif (countryInfo.length) {\n\t\t\tsetData({\n\t\t\t\tlabels: countryInfo.map((countryInfo: CountryInfo) => countryInfo.date.format('MMM DD')),\n\t\t\t\tdatasets: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: intl.formatMessage({ id: 'new_cases' }),\n\t\t\t\t\t\tdata: countryInfo.map((countryInfo: CountryInfo) => countryInfo.newCases),\n\t\t\t\t\t\tfill: false,\n\t\t\t\t\t\tbackgroundColor: CHART_INFO_CONSTANTS.COLORS.NEW_CASES,\n\t\t\t\t\t\tborderColor: CHART_INFO_CONSTANTS.COLORS.NEW_CASES\n\t\t\t\t\t}, {\n\t\t\t\t\t\tlabel: intl.formatMessage({ id: 'new_deaths' }),\n\t\t\t\t\t\tdata: countryInfo.map((countryInfo: CountryInfo) => countryInfo.newDeaths),\n\t\t\t\t\t\tfill: false,\n\t\t\t\t\t\tbackgroundColor: CHART_INFO_CONSTANTS.COLORS.NEW_DEATHS,\n\t\t\t\t\t\tborderColor: CHART_INFO_CONSTANTS.COLORS.NEW_DEATHS\n\t\t\t\t\t}, {\n\t\t\t\t\t\tlabel: intl.formatMessage({ id: 'total_cases' }),\n\t\t\t\t\t\tdata: countryInfo.map((countryInfo: CountryInfo) => countryInfo.totalCases),\n\t\t\t\t\t\tfill: false,\n\t\t\t\t\t\tbackgroundColor: CHART_INFO_CONSTANTS.COLORS.TOTAL_CASES,\n\t\t\t\t\t\tborderColor: CHART_INFO_CONSTANTS.COLORS.TOTAL_CASES\n\t\t\t\t\t}, {\n\t\t\t\t\t\tlabel: intl.formatMessage({ id: 'total_deaths' }),\n\t\t\t\t\t\tdata: countryInfo.map((countryInfo: CountryInfo) => countryInfo.totalDeaths),\n\t\t\t\t\t\tfill: false,\n\t\t\t\t\t\tbackgroundColor: CHART_INFO_CONSTANTS.COLORS.TOTAL_DEATHS,\n\t\t\t\t\t\tborderColor: CHART_INFO_CONSTANTS.COLORS.TOTAL_DEATHS\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t});\n\t\t}\n\t}, [countryInfo, intl]);\n\n\treturn <div className=\"chart-info-component margin-top\">\n\t\t<Chart type=\"line\" data={data} options={chartOptions} />\n\t</div>;\n};\n\nexport default ChartInfoComponent;\n","interface TableInfoConfig {\n\tROWS: number;\n}\n\nexport const TABLE_INFO_CONFIG: TableInfoConfig = {\n\tROWS: 15\n};\n","import React, {FunctionComponent, ReactElement, useEffect, useState} from 'react';\nimport './table-info.component.scss';\nimport {DataTable} from 'primereact/datatable';\nimport {Column} from 'primereact/column';\nimport {FormattedMessage} from 'react-intl';\nimport {useSelector} from 'react-redux';\nimport MainState from 'store/model/main.state';\nimport {TABLE_INFO_CONFIG} from './config/table-info.config';\nimport CountryRow from './model/country-row';\nimport {Link} from 'react-router-dom';\nimport {APP_CONSTANTS} from 'config/app.config';\n\ninterface TableInfoComponent {\n\tshowDate: boolean;\n\tshowCountryName: boolean;\n\tcountryRowData: CountryRow[];\n}\n\nconst TableInfoComponent: FunctionComponent<TableInfoComponent> = ({showDate, showCountryName, countryRowData}): ReactElement => {\n\tconst language = useSelector((state: MainState) => state.language.language);\n\tconst [ first, setFirst ] = useState();\n\tconst [ fromToRow, setFromToRow ] = useState('');\n\n\tuseEffect(() => {\n\t\tsetFirst(0);\n\t\tsetFromToRow(`${countryRowData.length ? '1' : '0'} - ${TABLE_INFO_CONFIG.ROWS > countryRowData.length ? countryRowData.length : TABLE_INFO_CONFIG.ROWS}`);\n\t}, [countryRowData]);\n\n\tconst nameBody = (rowData: CountryRow): ReactElement => {\n\t\treturn <Link to={`${APP_CONSTANTS.ROUTES.COUNTRY}/${rowData.country}`}>{rowData.country}</Link>;\n\t};\n\n\tconst dateBody = (rowData: CountryRow): ReactElement => {\n\t\treturn <span>{rowData.date.locale(language.value).format(language.dateFormat)}</span>;\n\t};\n\n\tconst linkBody = (rowData: CountryRow): ReactElement => {\n\t\treturn <Link className=\"country-link vertically-centered\" to={`${APP_CONSTANTS.ROUTES.COUNTRY}/${rowData.country}`}>\n\t\t\t<i className=\"pi pi-info\"/>\n\t\t</Link>;\n\t};\n\n\tconst paginate = (e: { first: number }): void => {\n\t\tconst limit = e.first + TABLE_INFO_CONFIG.ROWS;\n\t\tsetFirst(e.first);\n\t\tsetFromToRow(`${e.first + 1} - ${limit > countryRowData.length ? countryRowData.length : limit}`);\n\t};\n\n\treturn <div className=\"table-info-component margin-top position-relative\">\n\t\t<DataTable value={countryRowData} paginator={true} rows={TABLE_INFO_CONFIG.ROWS} first={first} onPage={paginate}>\n\t\t\t{ showCountryName && <Column header={<FormattedMessage id=\"country\"/>} body={nameBody}/> }\n\t\t\t{ showDate && <Column header={<FormattedMessage id=\"date\"/>} sortable={true} body={dateBody}/> }\n\t\t\t<Column field=\"newCases\" header={<FormattedMessage id=\"new_cases\"/>} sortable={true}/>\n\t\t\t<Column field=\"newDeaths\" header={<FormattedMessage id=\"new_deaths\"/>} sortable={true}/>\n\t\t\t<Column field=\"totalCases\" header={<FormattedMessage id=\"total_cases\"/>} sortable={true}/>\n\t\t\t<Column field=\"totalDeaths\" header={<FormattedMessage id=\"total_deaths\"/>} sortable={true}/>\n\t\t\t{ showCountryName && <Column body={linkBody}/> }\n\t\t</DataTable>\n\t\t<span className=\"paginator-info\">{`${fromToRow} / ${countryRowData.length}`}</span>\n\t</div>;\n};\n\nexport default TableInfoComponent;\n","import CountryRow from './country-row';\nimport moment, {Moment} from 'moment';\n\nexport default class CountryRowImp implements CountryRow {\n\tcountry: string;\n\tdate: Moment;\n\tnewCases: number;\n\tnewDeaths: number;\n\ttotalCases: number;\n\ttotalDeaths: number;\n\n\tconstructor(country: string = '', date: Moment = moment(), newCases: number = 0, newDeaths: number = 0, totalCases: number = 0, totalDeaths: number = 0) {\n\t\tthis.country = country;\n\t\tthis.date = date;\n\t\tthis.newCases = newCases;\n\t\tthis.newDeaths = newDeaths;\n\t\tthis.totalCases = totalCases;\n\t\tthis.totalDeaths = totalDeaths;\n\t}\n}\n","/* istanbul ignore file */\nimport MainAction from '../model/main.action';\nimport SelectorOption from 'components/main/components/view-selector/model/selector-option';\nimport {CurrentViewActionTypesEnum} from './types';\nimport SelectorOptionImp from 'components/main/components/view-selector/model/selector-option.imp';\n\nexport interface SetSelectorOptionAction extends MainAction {\n    selectorOption: SelectorOption;\n}\n\nexport const SET_SELECTOR_OPTION_ACTION: SetSelectorOptionAction = {\n    type: CurrentViewActionTypesEnum.SET_SELECTOR_OPTION,\n    selectorOption: new SelectorOptionImp()\n};\n","import React, {FunctionComponent, ReactElement} from 'react';\nimport './view-selector.component.scss';\nimport {FormattedMessage} from 'react-intl';\nimport {VIEW_SELECTOR_CONSTANTS} from './config/view-selector.config';\nimport SelectorOption from './model/selector-option';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {SET_SELECTOR_OPTION_ACTION} from 'store/current-view/actions';\nimport MainState from 'store/model/main.state';\n\nconst ViewSelectorComponent: FunctionComponent = (): ReactElement => {\n\tconst dispatch = useDispatch();\n\tconst selectorOption = useSelector((state: MainState) => state.currentView.selectorOption);\n\n\tconst onOptionSelect = (option: SelectorOption): void => {\n\t\tconst setSelectorOptionAction = {...SET_SELECTOR_OPTION_ACTION};\n\t\tsetSelectorOptionAction.selectorOption = option;\n\t\tdispatch(setSelectorOptionAction);\n\t};\n\n\treturn <div className=\"view-selector-component\">\n\t\t{ VIEW_SELECTOR_CONSTANTS.SELECTOR_OPTIONS.map((option: SelectorOption, index: number) => {\n\t\t\treturn <div key={index} className={`selector ${option === selectorOption && 'selected'}`} onClick={() => onOptionSelect(option)}>\n\t\t\t\t<span className=\"mobile-hidden\"><FormattedMessage id={option.title}/></span>\n\t\t\t\t<i className={`desktop-hidden ${option.icon}`}/>\n\t\t\t</div>;\n\t\t}) }\n\t</div>\n};\n\nexport default ViewSelectorComponent;\n","/* istanbul ignore file */\nimport MainAction from '../model/main.action';\nimport {MapActionTypesEnum} from './types';\n\nexport interface SetMapDataAction extends MainAction {\n    data: any;\n}\n\nexport const SET_MAP_DATA_ACTION: SetMapDataAction = {\n    type: MapActionTypesEnum.SET_MAP_DATA,\n    data: {}\n};\n","import React, {Fragment} from 'react';\nimport CountryCoordinates from '../model/country-coordinates';\nimport {MAP_CONSTANTS} from '../config/map.config';\nimport Country from 'model/country';\nimport L from 'leaflet';\nimport CountryInfo from 'model/country-info';\nimport {Moment} from 'moment';\nimport CountryInfoImp from 'model/country-info.imp';\nimport {FormattedMessage} from 'react-intl';\n\nconst getCountryCoordinates = (country: string): CountryCoordinates | undefined => {\n\treturn MAP_CONSTANTS.COUNTRIES_LAT_LONG.find((countryCoordinates: CountryCoordinates) => countryCoordinates.name === country);\n};\n\nexport const createMarkers = (countries: Country[], markerGroup: any, date: Moment, setMarkerInfo: Function): void => {\n\tmarkerGroup.on('click', (e: any) => console.log(e));\n\n\tcountries.forEach((country: Country) => {\n\t\tconst countryCoordinates = getCountryCoordinates(country.country);\n\n\t\tif (countryCoordinates) {\n\t\t\tconst countryInfo = country.info.find((info: CountryInfo) => info.date.format('DD/MM/YYYY') === date.format('DD/MM/YYYY')) || new CountryInfoImp();\n\n\t\t\tL.marker(countryCoordinates.latLong)\n\t\t\t\t.addTo(markerGroup)\n\t\t\t\t.on('click', () => setMarkerInfo(<Fragment><b>{country.country}</b><br/><span><FormattedMessage id=\"new_cases\"/>: {countryInfo.newCases}</span><br/><span><FormattedMessage id=\"new_deaths\"/>: {countryInfo.newDeaths}</span></Fragment>));\n\t\t}\n\t});\n};\n","import React, {ChangeEvent, Fragment, FunctionComponent, ReactElement, useEffect, useState} from 'react';\nimport './home.component.scss';\nimport {FormattedMessage, useIntl} from 'react-intl';\nimport ChartInfoComponent from '../chart-info/chart-info.component';\nimport {useDispatch, useSelector} from 'react-redux';\nimport MainState from 'store/model/main.state';\nimport TableInfoComponent from '../table-info/table-info.component';\nimport moment from 'moment';\nimport Country from 'model/country';\nimport CountryRow from '../table-info/model/country-row';\nimport CountryRowImp from '../table-info/model/country-row.imp';\nimport ViewSelectorComponent from '../view-selector/view-selector.component';\nimport {SelectorOptions} from '../view-selector/model/selector-options.enum';\nimport {loadMapInfo} from 'services/country.service';\nimport {HIDE_LOADING_ACTION, SHOW_LOADING_ACTION} from 'store/loading/actions';\nimport {SET_MAP_DATA_ACTION} from 'store/map/actions';\nimport MapComponent from '../map/map.component';\n\nconst HomeComponent: FunctionComponent = (): ReactElement => {\n\tconst intl = useIntl();\n\tconst dispatch = useDispatch();\n\tconst countries = useSelector((state: MainState) => state.stats.countries);\n\tconst dateFormat = useSelector((state: MainState) => state.language.language.dateFormat);\n\tconst selectorOption = useSelector((state: MainState) => state.currentView.selectorOption);\n\tconst mapData = useSelector((state: MainState) => state.map.data);\n\tconst [ search, setSearch ] = useState('');\n\tconst [ countryRowData, setCountryRowData ] = useState<CountryRow[]>([]);\n\n\tuseEffect(() => {\n\t\tif (selectorOption.title === SelectorOptions.MAP && !Object.keys(mapData).length) {\n\t\t\tdispatch(SHOW_LOADING_ACTION);\n\n\t\t\tloadMapInfo()\n\t\t\t\t.then((geoJson: any) => {\n\t\t\t\t\tconst setMapDataAction = {...SET_MAP_DATA_ACTION};\n\t\t\t\t\tsetMapDataAction.data = geoJson;\n\t\t\t\t\tdispatch(setMapDataAction);\n\t\t\t\t})\n\t\t\t\t.finally(() => dispatch(HIDE_LOADING_ACTION));\n\t\t}\n\t}, [mapData, dispatch, selectorOption]);\n\n\tuseEffect(() => {\n\t\tsetCountryRowData(formatCountryRowData(countries));\n\t}, [countries]);\n\n\tconst searchCountry = (e: ChangeEvent<HTMLInputElement>): void => {\n\t\tsetSearch(e.target.value);\n\t\tsetCountryRowData(e.target.value ? formatCountryRowData(countries.filter((country: Country) => country.country.toLowerCase().includes(e.target.value.toLowerCase()) || e.target.value.toLowerCase().includes(country.country.toLowerCase()))) : formatCountryRowData(countries));\n\t};\n\n\tconst formatCountryRowData = (countriesList: Country[]): CountryRow[] => {\n\t\treturn countriesList.map((country: Country) => new CountryRowImp(\n\t\t\tcountry.country,\n\t\t\tcountry.info[country.info.length - 1].date,\n\t\t\tcountry.info[country.info.length - 1].newCases,\n\t\t\tcountry.info[country.info.length - 1].newDeaths,\n\t\t\tcountry.info[country.info.length - 1].totalCases,\n\t\t\tcountry.info[country.info.length - 1].totalDeaths\n\t\t));\n\t};\n\n\treturn <div className=\"home-component container\">\n\t\t<div className=\"row\">\n\t\t\t<ViewSelectorComponent/>\n\t\t\t<div className=\"col-sm-12 white-box\">\n\t\t\t\t<h3><FormattedMessage id=\"home_title\"/>{ moment().subtract(1, 'days').format(dateFormat) }</h3>\n\t\t\t\t<h5><FormattedMessage id=\"home_subtitle\"/></h5>\n\t\t\t\t<p><FormattedMessage id=\"we_can\"/></p>\n\t\t\t\t{ selectorOption.title === SelectorOptions.TABLE && <Fragment>\n\t\t\t\t\t<input\n\t\t\t\t\t\tplaceholder={intl.formatMessage({ id: 'search_country' })}\n\t\t\t\t\t\tvalue={search}\n\t\t\t\t\t\tonChange={searchCountry}\n\t\t\t\t\t/>\n                    <TableInfoComponent showDate={false} showCountryName={true} countryRowData={countryRowData}/>\n\t\t\t\t</Fragment> }\n\t\t\t\t{ selectorOption.title === SelectorOptions.CHART && <ChartInfoComponent countryInfo={countries.length ? countries[countries.length - 1].info : []}/> }\n\t\t\t\t{ selectorOption.title === SelectorOptions.MAP && <MapComponent/> }\n\t\t\t</div>\n\t\t</div>\n\t</div>;\n};\n\nexport default HomeComponent;\n","import React, {FunctionComponent, ReactElement, useEffect, useState} from 'react';\nimport './country-info.component.scss';\nimport {FormattedMessage} from 'react-intl';\nimport {useSelector} from 'react-redux';\nimport MainState from 'store/model/main.state';\nimport {useParams} from 'react-router';\nimport TableInfoComponent from '../table-info/table-info.component';\nimport ChartInfoComponent from '../chart-info/chart-info.component';\nimport Country from 'model/country';\nimport CountryImp from 'model/country.imp';\nimport CountryRow from '../table-info/model/country-row';\nimport CountryRowImp from '../table-info/model/country-row.imp';\nimport CountryInfo from 'model/country-info';\n\nconst CountryInfoComponent: FunctionComponent = (): ReactElement => {\n\tconst { countryName } = useParams();\n\tconst country = useSelector((state: MainState) => state.stats.countries.find((c: Country) => c.country === countryName) || new CountryImp());\n\tconst [ countryRowData, setCountryRowData ] = useState<CountryRow[]>([]);\n\n\tuseEffect(() => {\n\t\tsetCountryRowData(country.info.map((countryInfo: CountryInfo) => new CountryRowImp(\n\t\t\tcountry.country,\n\t\t\tcountryInfo.date,\n\t\t\tcountryInfo.newCases,\n\t\t\tcountryInfo.newDeaths,\n\t\t\tcountryInfo.totalCases,\n\t\t\tcountryInfo.totalDeaths\n\t\t)).reverse());\n\t}, [country]);\n\n\treturn <div className=\"country-info-component container\">\n\t\t<div className=\"row\">\n\t\t\t<div className=\"col-sm-12 white-box\">\n\t\t\t\t<h3><FormattedMessage id=\"country_title\"/>{ countryName }</h3>\n\t\t\t\t<TableInfoComponent showDate={true} showCountryName={false} countryRowData={countryRowData}/>\n\t\t\t\t<ChartInfoComponent countryInfo={country.info}/>\n\t\t\t</div>\n\t\t</div>\n\t</div>;\n};\n\nexport default CountryInfoComponent;\n","import React, {FunctionComponent, ReactElement} from 'react';\nimport './data-info.component.scss';\nimport {FormattedMessage} from 'react-intl';\n\nconst DataInfoComponent: FunctionComponent = (): ReactElement => {\n\treturn <div className=\"data-info-component row\">\n\t\t<div className=\"col-12\">\n\t\t\t<a className=\"font-weight-bold text-center linked-in-link\" href=\"https://es.linkedin.com/in/fernando-g%C3%B3mez-aparicio-02a176138\" target=\"_blank\" rel=\"noopener noreferrer\"><FormattedMessage id=\"data_info_linked_in\"/></a>\n\t\t\t<div className=\"text-center\">\n\t\t\t\t<span><FormattedMessage id=\"data_info\"/> </span>\n\t\t\t\t<a className=\"between-link font-weight-bold\" href=\"https://geojson-maps.ash.ms/\" target=\"_blank\" rel=\"noopener noreferrer\">geojson</a>\n\t\t\t\t<span><FormattedMessage id=\"and\"/> </span>\n\t\t\t\t<a className=\"font-weight-bold\" href=\"https://ourworldindata.org/coronavirus-source-data\" target=\"_blank\" rel=\"noopener noreferrer\">OWS</a>\n\t\t\t</div>\n\t\t</div>\n\t</div>;\n};\n\nexport default DataInfoComponent;\n","import React, {FunctionComponent, ReactElement, useEffect} from 'react';\nimport './main.component.scss';\nimport {useDispatch, useSelector} from 'react-redux';\nimport MainState from 'store/model/main.state';\nimport {SpinnerComponent} from 'react-element-spinner';\nimport {HIDE_LOADING_ACTION, SHOW_LOADING_ACTION} from 'store/loading/actions';\nimport {loadCountriesInfo} from 'services/country.service';\nimport Country from 'model/country';\nimport {SET_COUNTRIES_ACTION} from 'store/stats/actions';\nimport HeaderComponent from './components/header/header.component';\nimport {IntlProvider} from 'react-intl';\nimport {i18n} from 'i18n/i18n';\nimport {Redirect, Route, Switch} from 'react-router';\nimport {BrowserRouter} from 'react-router-dom';\nimport {APP_CONSTANTS} from 'config/app.config';\nimport HomeComponent from './components/home/home.component';\nimport CountryInfoComponent from './components/country-info/country-info.component';\nimport DataInfoComponent from './components/data-info/data-info.component';\n\nconst MainComponent: FunctionComponent = (): ReactElement => {\n\tconst dispatch = useDispatch();\n\tconst loading = useSelector((state: MainState) => state.loading.loading);\n\tconst countries = useSelector((state: MainState) => state.stats.countries);\n\tconst languageCode = useSelector((state: MainState) => state.language.language.value);\n\n\tuseEffect(() => {\n\t\tif (!countries.length) {\n\t\t\tdispatch(SHOW_LOADING_ACTION);\n\n\t\t\tloadCountriesInfo()\n\t\t\t\t.then((countriesInfo: Country[]) => {\n\t\t\t\t\tconst setCountriesAction = {...SET_COUNTRIES_ACTION};\n\t\t\t\t\tsetCountriesAction.countries = countriesInfo;\n\t\t\t\t\tdispatch(setCountriesAction);\n\t\t\t\t})\n\t\t\t\t.finally(() => dispatch(HIDE_LOADING_ACTION));\n\t\t}\n\t}, [dispatch, countries.length]);\n\n\treturn <IntlProvider locale={languageCode} messages={Object.assign(i18n)[languageCode]}>\n\t\t<BrowserRouter>\n\t\t\t<div className=\"main-component\">\n\t\t\t\t<SpinnerComponent loading={loading} position=\"global\" color=\"#008489\" backgroundColor=\"black\"/>\n\t\t\t\t<HeaderComponent/>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path={APP_CONSTANTS.ROUTES.HOME} component={HomeComponent}/>\n\t\t\t\t\t<Route path={APP_CONSTANTS.ROUTES.COUNTRY_INFO} component={CountryInfoComponent}/>\n\t\t\t\t\t<Redirect to={APP_CONSTANTS.ROUTES.HOME}/>\n\t\t\t\t</Switch>\n\t\t\t\t<DataInfoComponent/>\n\t\t\t</div>\n\t\t</BrowserRouter>\n\t</IntlProvider>;\n};\n\nexport default MainComponent;\n","import React, {FunctionComponent, ReactElement} from 'react';\nimport './App.scss';\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport {mainReducer} from 'store/main.reducer';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport MainComponent from 'components/main/main.component';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'primereact/resources/themes/nova-light/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport 'primeicons/primeicons.css';\n\nconst App: FunctionComponent = (): ReactElement => {\n  return <div className=\"app\">\n    <Provider store={createStore(mainReducer, composeWithDevTools())}>\n      <MainComponent/>\n    </Provider>\n  </div>;\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}